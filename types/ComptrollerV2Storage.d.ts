/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface ComptrollerV2StorageContract
  extends Truffle.Contract<ComptrollerV2StorageInstance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<ComptrollerV2StorageInstance>;
}

type AllEvents = never;

export interface ComptrollerV2StorageInstance extends Truffle.ContractInstance {
  _borrowGuardianPaused(
    txDetails?: Truffle.TransactionDetails
  ): Promise<boolean>;

  _mintGuardianPaused(txDetails?: Truffle.TransactionDetails): Promise<boolean>;

  accountAssets(
    arg0: string,
    arg1: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  admin(txDetails?: Truffle.TransactionDetails): Promise<string>;

  borrowGuardianPaused(
    arg0: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<boolean>;

  closeFactorMantissa(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  comptrollerImplementation(
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  liquidationIncentiveMantissa(
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  markets(
    arg0: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[boolean, BN, boolean]>;

  maxAssets(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  mintGuardianPaused(
    arg0: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<boolean>;

  oracle(txDetails?: Truffle.TransactionDetails): Promise<string>;

  pauseGuardian(txDetails?: Truffle.TransactionDetails): Promise<string>;

  pendingAdmin(txDetails?: Truffle.TransactionDetails): Promise<string>;

  pendingComptrollerImplementation(
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  seizeGuardianPaused(txDetails?: Truffle.TransactionDetails): Promise<boolean>;

  transferGuardianPaused(
    txDetails?: Truffle.TransactionDetails
  ): Promise<boolean>;

  methods: {
    _borrowGuardianPaused(
      txDetails?: Truffle.TransactionDetails
    ): Promise<boolean>;

    _mintGuardianPaused(
      txDetails?: Truffle.TransactionDetails
    ): Promise<boolean>;

    accountAssets(
      arg0: string,
      arg1: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;

    admin(txDetails?: Truffle.TransactionDetails): Promise<string>;

    borrowGuardianPaused(
      arg0: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<boolean>;

    closeFactorMantissa(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    comptrollerImplementation(
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;

    liquidationIncentiveMantissa(
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    markets(
      arg0: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[boolean, BN, boolean]>;

    maxAssets(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    mintGuardianPaused(
      arg0: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<boolean>;

    oracle(txDetails?: Truffle.TransactionDetails): Promise<string>;

    pauseGuardian(txDetails?: Truffle.TransactionDetails): Promise<string>;

    pendingAdmin(txDetails?: Truffle.TransactionDetails): Promise<string>;

    pendingComptrollerImplementation(
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;

    seizeGuardianPaused(
      txDetails?: Truffle.TransactionDetails
    ): Promise<boolean>;

    transferGuardianPaused(
      txDetails?: Truffle.TransactionDetails
    ): Promise<boolean>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
