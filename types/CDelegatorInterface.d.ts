/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface CDelegatorInterfaceContract
  extends Truffle.Contract<CDelegatorInterfaceInstance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<CDelegatorInterfaceInstance>;
}

export interface NewImplementation {
  name: "NewImplementation";
  args: {
    oldImplementation: string;
    newImplementation: string;
    0: string;
    1: string;
  };
}

type AllEvents = NewImplementation;

export interface CDelegatorInterfaceInstance extends Truffle.ContractInstance {
  _setImplementation: {
    (
      implementation_: string,
      allowResign: boolean,
      becomeImplementationData: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      implementation_: string,
      allowResign: boolean,
      becomeImplementationData: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      implementation_: string,
      allowResign: boolean,
      becomeImplementationData: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      implementation_: string,
      allowResign: boolean,
      becomeImplementationData: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  implementation(txDetails?: Truffle.TransactionDetails): Promise<string>;

  methods: {
    _setImplementation: {
      (
        implementation_: string,
        allowResign: boolean,
        becomeImplementationData: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        implementation_: string,
        allowResign: boolean,
        becomeImplementationData: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        implementation_: string,
        allowResign: boolean,
        becomeImplementationData: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        implementation_: string,
        allowResign: boolean,
        becomeImplementationData: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    implementation(txDetails?: Truffle.TransactionDetails): Promise<string>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
